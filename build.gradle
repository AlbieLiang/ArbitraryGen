// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
//        mavenCentral()
        jcenter()
        maven {
            // 假如你有私服可以用的话，可以引用私服
            // url 'http://10.XXX.XXX.XXX:8080/nexus/content/repositories/releases/'
            // 没有的话，就本地引入
//            url "file:${project.rootDir.getAbsolutePath()}/repositories/release"
//            url 'https://github.com/AlbieLiang/ArbitraryGen/tree/master/arbitrarygen-plugin/plugin-output/release/'
            url 'https://dl.bintray.com/albieliang/maven/'
        }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.2'

        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'


        // 自定义的插件以 groupId:name:版本号 的方式引用，这个name来自插件工程下的arbitrarygen.properties文件名
        classpath 'cc.suitalk.tools:arbitrarygen-plugin:1.0.0'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}
allprojects {
    repositories {
//        mavenCentral()
        jcenter()
        maven {
            // 假如你有私服可以用的话，可以引用私服
            // url 'http://10.XXX.XXX.XXX:8080/nexus/content/repositories/releases/'
            // 没有的话，就本地引入
//            url "file:${project.rootDir.getAbsolutePath()}/repositories/release"
//            url 'https://github.com/AlbieLiang/ArbitraryGen/tree/master/arbitrarygen-plugin/plugin-output/release/'

            url 'https://dl.bintray.com/albieliang/maven/'
        }
    }
    tasks.withType(JavaCompile) {
        sourceCompatibility = "1.7"
        targetCompatibility = "1.7"
        options.encoding ="UTF-8"
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}