package <%=_package%>;

import java.util.HashMap;
import java.util.Map;

import android.content.ContentValues;
import android.database.Cursor;

import cc.suitalk.sdk.db.VDBItem;
import cc.suitalk.sdk.db.VigorDBInfo;
import cc.suitalk.sdk.db.base.IDatabaseInfo;
import cc.suitalk.sdk.tools.debug.DebugLog;

<% var count = 0;%>
<%for (var i = 0; i < field.length; i++) {%>
	<%var f = field[i];%>
	<%if (f.part && f.part.length > 0) {%>
		<%count++;%>
	<%}%>
<%}%>
<%if (count > 0) {%>
import cc.suitalk.sdk.base.SBuffer;
<%}%>
/**
 * Generated by ScriptCodeGenEngine.
 * 
 * @author AlbieLiang
 * 
 * @since <%var date = new Date();%><%=date.toLocaleDateString() + " " + date.toLocaleTimeString()%>
 */
public class <%=this._name%> extends VDBItem {

	private static final String TAG = "DB.<%=this._name%>";
	
	public static final String TABLE = "<%if(this._dbName){%><%=_dbName%><%}else{%><%=this._name%><%}%>";
	<% var indexSet = [];%>
	<%for (var i = 0; i < field.length; i++) {%>
		<%var f = field[i];%>
		<%if (f._index) {%>
			<%var indexItem = indexSet[f._index];%>
			<%if (!indexItem) {%>
				<%indexItem = indexSet[f._index] = [];%>
			<%}%>
			<%indexItem.push(f._name);%>
		<%}%>
	<%}%>
	<%if (this.index != undefined && this.index != null) {%>
		<%if (this.index instanceof Array) {%>
            <%for (var i = 0; i < this.index.length; i++) {%>
            	<%var idx = this.index[i];%>
                <%if (idx) {%>
					<%var indexItem = indexSet[idx._name];%>
					<%if (!indexItem) {%>
						<%indexItem = indexSet[idx._name] = [];%>
					<%}%>
					<%indexItem.push(idx._fields);%>
                <%}%>
            <%}%>
        <%} else {%>
			<%var indexItem = indexSet[this.index._name];%>
			<%if (!indexItem) {%>
				<%indexItem = indexSet[this.index._name] = [];%>
			<%}%>
			<%indexItem.push(this.index._fields);%>
        <%}%>
	<%}%>
	public static final String[] CREATE_INDEX_SQLS = {
	<%var position = 0;%>
	<%for(var key in indexSet) {%>
		<%var indexItem = indexSet[key];%>
		<%if (position++ > 0) {%>,<%}%>"CREATE INDEX IF NOT EXISTS <%=key%> ON " + TABLE + "(<%=indexItem[0]%><%for (var i = 1; i < indexItem.length; i++) {%>, <%=indexItem[i]%><%}%>);"
	<%}%>	
	};
	<%for(var i = 0; i < field.length; i++) {%>
		<%var f = field[i];%>
		public final static String COL_<%=f._name.toUpperCase()%> = "<%=f._name%>";	
	<%}%>
	
	<%for(var i = 0; i < field.length; i++) {%>
		<%var f = field[i];%>
		<%if (f._comment) {%>/** <%=f._comment%> */<%}%>
		protected <%=f._type%> <%=f._name%>;
		protected boolean has<%=firstChar2UpperCase(f._name)%>;
	<%}%>
	
	<%for(var i = 0; i < field.length; i++) {var f = field[i];%>
	private static final int <%=f._name%>_HASHCODE = "<%=f._name%>".hashCode();  
	<%}%>
	
	<%for(var i = 0; i < field.length; i++) {var f = field[i];%>
	public <%=f._type%> get<%=firstChar2UpperCase(f._name)%>() {
		return this.<%=f._name%>;
	}
	public <%=this._name%> set<%=firstChar2UpperCase(f._name)%>(<%=f._type%> <%=f._name%>) {
		this.<%=f._name%> = <%=f._name%>;
		this.has<%=firstChar2UpperCase(f._name)%> = true;
		return this;
	}
	<%}%>

	@Override
	public void convertFrom(Cursor cursor) {
		String[] columns = cursor.getColumnNames();
		if (columns == null || columns.length == 0) {
			return;
		}
		for (int idx = 0, len = columns.length; idx < len; idx++) {
            int hashCode = columns[idx].hashCode();
            if (<%=field[0]._name%>_HASHCODE == hashCode) {
                this.<%=field[0]._name%> = cursor.<%=genGetDBTypeMethod(field[0]._type)%>(idx)<%if(field[0]._type=="boolean" || field[0]._type=="Boolean"){%> != 0<%}%>;
                has<%=firstChar2UpperCase(field[0]._name)%> = true;
			<%for(var i = 1; i < field.length; i++){var f = field[i];%>
            } else if(<%=f._name%>_HASHCODE == hashCode) {
                this.<%=f._name%> = cursor.<%=genGetDBTypeMethod(f._type)%>(idx)<%if(f._type=="boolean" || f._type=="Boolean"){%> != 0<%}%>;
                has<%=firstChar2UpperCase(f._name)%> = true;
			<%}%>
            }
		}
	}

	@Override
	public ContentValues convertTo() {
		ContentValues values = new ContentValues();
		if (hasRowId) {
			values.put(COL_ROWID, rowId);
		}
		<%for (var i = 0; i < field.length; i++) {%>
			<%var f = field[i];%>
			<%if ((f._type == "String" || f._type == "string") && f._default != undefined) {%>
				if (this.<%=f._name%> == null) {
					this.<%=f._name%> = "<%=f._default%>";
				}
			<%}%>
			if (has<%=firstChar2UpperCase(f._name)%>) {
				<%if (isProto(f._type) && f._referto) {%>
				if (this.<%=f._name%> != null) {
					try {
						values.put("<%=f._name%>", this.<%=f._name%>.toByteArray());
					} catch (java.io.IOException e){
						Log.e(TAG, e.getMessage());
					}
				}
				<%} else {%>
					values.put("<%=f._name%>", this.<%=f._name%>);
				<%}%>
			}
		<%}%>
		return values;
	}
	
	@Override
	public void reset() {
		rowId = 0;
		hasRowId = false;
		// field
		<%for (var i = 0; i < field.length; i++) {%>
			<%var f = field[i];%>
			<%=f._name%> = <%=getTypeDefaultValue(f._type, f._default)%>;
			has<%=firstChar2UpperCase(f._name)%> = false;
		<%}%>
	}

	@Override
	public void clear() {
		<%for (var i = 0; i < field.length; i++) {%>
			<%var f = field[i];%>
			<%=f._name%> = <%=getTypeDefaultValue(f._type, f._default)%>;
		<%}%>
	}
	
	private static IDatabaseInfo sVigorDBInfo;
	
	public static IDatabaseInfo getVDBInfo() {
		if (sVigorDBInfo == null) {
			<%var primaryKeys = [];%>
			<%for (var i = 0; i < field.length; i++) {%>
				<%var f = field[i];%>
				<%if (f._primaryKey != undefined && f._primaryKey == "true") {%>
					<%primaryKeys.push(f._name);%>
				<%}%>
			<%}%>
			<%if (primaryKeys.length == 0) {%>
				<%primaryKeys.push("rowId");%>
			<%}%>
			String[] primaryKeys = new String[<%=primaryKeys.length%>];
			String[] columns = new String[<%=field.length%> + 1];
			Map<String, String> columnsDefine = new HashMap<String, String>();
			StringBuilder createSql = new StringBuilder();
			<%var offset = 0;%>
			<%for (var i = 0; i < field.length; i++) {%>
				<%var f = field[i];%>
				// field : <%=f._name%>
				columns[<%=i%>] = "<%=f._name%>";
				<%if (f._primaryKey != undefined && f._primaryKey == "true") {%>
					primaryKeys[<%=offset++%>] = "<%=f._name%>";
				<%}%>
				columnsDefine.put("<%=f._name%>", "<%=getDBType(f._type)%>");
				createSql.append("<%=f._name%> <%=getDBType(f._type)%><%if (f._default != undefined) {%> default '<%if (f._type == "Boolean" || f._type == "boolean") {if (f._default == "true") {%>1<%} else {%>0<%}} else {%><%=f._default%><%}%>'<%}%>");
				<%if ((f._type == "int" || f._type == "Integer") && f._autoInc == "true") {%>
				createSql.append(" AUTOINCREMENT");
				<%}%>
				createSql.append(",");
			<%}%>
			
			// primaryKeys
			createSql.append(" PRIMARY KEY (");
			createSql.append("<%=primaryKeys[0]%>");
			<%for (var i = 1; i < primaryKeys.length; i++) {%>
				createSql.append(",");
				createSql.append("<%=primaryKeys[i]%>");
			<%}%>
			
			createSql.append(")");
			// default field rowId
			columns[<%=field.length%>] = COL_ROWID;
			sVigorDBInfo = new VigorDBInfo(TABLE, primaryKeys, columns, createSql.toString(), CREATE_INDEX_SQLS, columnsDefine);
			DebugLog.d(TAG, "create table sql : '%s'.", createSql);
		}
		return sVigorDBInfo;
	}
}