// Top-level build file where you can add configuration options common to all sub-projects/modules.

apply plugin: 'groovy'
//apply plugin: 'maven'

apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

def siteUrl = rootProject.ext.bintrayConfig["siteUrl"]   // 项目的主页
def gitUrl = rootProject.ext.bintrayConfig["gitUrl"]   // Git仓库的url
group = "cc.suitalk.tools"            // Maven Group ID for the artifact，

// 这个version是library的版本，更新后也需要更改这个值
version = rootProject.ext.bintrayConfig["version"]
archivesBaseName = 'arbitrarygen-plugin'

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile rootProject.ext.arbitrarygen["main"]
}

// 一定要记得使用交叉编译选项，因为我们可能用很高的JDK版本编译，为了让安装了低版本的同学能用上我们写的插件，必须设定source和target
compileGroovy {
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
    options.encoding = "UTF-8"
}

jar {
    from files(sourceSets.main.output.classesDir)
//    from configurations.runtime.asFileTree.files.collect { zipTree(it) }
    from configurations.compile.collect {
        if (it != null && it.toString().contains("arbitrarygen")) {
            println(it)
            it.isDirectory() ? it : zipTree(it)
        } else {
            "ignore-this"
        }
    }
    exclude("ignore-this")
}
uploadArchives {
    repositories.mavenDeployer {
        // 如果你公司或者自己搭了nexus私服，那么可以将插件deploy到上面去
        //        repository(url: "http://10.XXX.XXX.XXX:8080/nexus/content/repositories/releases/") {
        //            authentication(userName: "admin", password: "admin")
        //        }
        // 如果没有私服的话，发布到本地也是ok的
        repository(url: "file:${System.getProperty("user.home")}/.debugMaven/repositories/release")
    }
}

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'jar'
                // Add your description here
                name 'The gradle plugin for ArbitraryGen, ArbitraryGen is a multifunction code generator.'     //项目的描述 你可以多写一点
                url siteUrl
                // Set your license
                licenses {
                    license {
                        name rootProject.ext.bintrayConfig["license-name"]
                        url rootProject.ext.bintrayConfig["license-url"]
                    }
                }
                developers {
                    developer {
                        id rootProject.ext.bintrayConfig["developer-id"]
                        name rootProject.ext.bintrayConfig["developer-name"]
                        email rootProject.ext.bintrayConfig["developer-email"]
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

task packSourcesJar(type: Jar) {
//    from android.sourceSets.main.java.srcDirs
//    from sourceSets.main.allJava
    from sourceSets.main.groovy.srcDirs
    classifier = 'sources'
}

//task createGroovydoc(type: Groovydoc) {
//    source = sourceSets.main.groovy.srcDirs
////    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
////    classpath += project.files(groovy.getBootClasspath().join(File.pathSeparator))
//}

task packGroovydocJar(type: Jar, dependsOn: groovydoc) {
    classifier = 'groovydoc'
    from groovydoc.destinationDir
}

artifacts {
    archives packGroovydocJar
    archives packSourcesJar
}

Properties properties = new Properties()
File file = project.rootProject.file('bintray-config.properties');
if (file.isFile()) {
    properties.load(file.newDataInputStream())

    bintray {
        user = properties.getProperty("bintray.user")
        key = properties.getProperty("bintray.apikey")
        configurations = ['archives']
        pkg {
            repo = "maven"          //这个应该是传到maven的仓库的
            name = archivesBaseName    //发布的项目名字
            websiteUrl = siteUrl
            vcsUrl = gitUrl
            licenses = ["Apache-2.0"]
            publish = true
        }
    }
}