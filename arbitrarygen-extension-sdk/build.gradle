apply plugin: 'java'
apply plugin: 'application'
//apply plugin: 'maven'

apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

def siteUrl = 'https://github.com/AlbieLiang/ArbitraryGen'   // 项目的主页
def gitUrl = 'https://github.com/AlbieLiang/ArbitraryGen.git'   // Git仓库的url
group = "cc.suitalk.tools"            // Maven Group ID for the artifact，

// 这个version是library的版本，更新后也需要更改这个值
version = '1.0.0'
archivesBaseName = 'arbitrarygen-extension-sdk'

// For jar config
mainClassName = ''

compileJava {
    sourceCompatibility = '1.7'
    targetCompatibility = '1.7'
}

jar {
    baseName = archivesBaseName
    version = this.version
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

uploadArchives {
    repositories.mavenDeployer {
        // 如果你公司或者自己搭了nexus私服，那么可以将插件deploy到上面去
        //        repository(url: "http://10.XXX.XXX.XXX:8080/nexus/content/repositories/releases/") {
        //            authentication(userName: "admin", password: "admin")
        //        }
        // 如果没有私服的话，发布到本地也是ok的
        repository(url: "file:${project.rootDir.getAbsolutePath()}/repositories/release")
    }
}

//打包
task packLibJar(type: Jar, dependsOn: classes) {
    from files(sourceSets.main.output.classesDir)
    baseName = archivesBaseName
    version = this.version
}

task uploadJar(type: Copy, dependsOn: packLibJar) {
    from("build/libs")
    into("../ArbitraryGen/")
    include("${archivesBaseName}-${version}.jar")
}



install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'jar'
                // Add your description here
                name 'A extension open SDK for ArbitraryGen developer, ArbitraryGen is a multifunction code generator.'     //项目的描述 你可以多写一点
                url siteUrl
                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'albieliang'        //填写的一些基本信息
                        name 'Albie Liang'
                        email 'albieliang@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}


task packSourcesJar(type: Jar) {
    from sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task packJavadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives packJavadocJar
    archives packSourcesJar
}

Properties properties = new Properties()
//读取properties的配置信息，当然直接把信息写到代码里也是可以的
properties.load(project.rootProject.file('bintray-config.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = "maven"          //这个应该是传到maven的仓库的
        name = archivesBaseName    //发布的项目名字
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}